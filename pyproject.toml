[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "writeworld"
version = "0.0.1"
description = "WriteWorld - An AI Writing Assistant"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [
    { include = "writeworld" }
]

[tool.poetry.dependencies]
python = "^3.10"
agentuniverse = "0.0.13"
setuptools = "^69.0.3"  # Replace pkg_resources
langchain-community = "^0.0.38"  # Add explicit dependency for newer LangChain features

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
hypothesis = "^6.82.0"
mypy = "^1.5.0"
ruff = "^0.1.0"
deptry = "^0.6.4"
pre-commit = "^2.20.0"

[[tool.poetry.source]]
name = "china"
url = "https://mirrors.aliyun.com/pypi/simple/"
priority = "primary"

[tool.black]
line-length = 120
target-version = ['py310']
preview = true

[tool.mypy]
files = ["agentuniverse"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = ["E501"]
line-length = 88
target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--strict-markers --cov=writeworld --cov-report=term-missing"
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["writeworld"]
omit = [
    "tests/*",
    "**/__init__.py",
    "**/__pycache__/*"
]

[tool.coverage.report]
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
fail_under = 80
